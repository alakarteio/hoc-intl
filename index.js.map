{"version":3,"file":"index.js","sources":["src/utils/storeSelector.js","src/utils/getSubPaths.js","src/formatter.js","src/hoc.jsx","src/utils/wrapDisplayName.js"],"sourcesContent":["const defaultState = state => state.config\n\nconst factoryConfig = (getState = defaultState) => context => (field, mandatory = true) => {\n  const state = getState(context.store.getState())\n\n  if ((!state || !state[field]) && mandatory) {\n    throw new Error(`/HOC k-intl/ ${field} is not readable. Make sure that this one is available at config.${field} on your redux store`)\n  }\n  return state[field]\n}\n\nexport default getState => (context) => {\n  const getConfig = factoryConfig(getState)(context)\n  return {\n    locale: getConfig('locale'),\n    lang: getConfig('lang'),\n    formats: getConfig('formats', false),\n  }\n}\n","\nconst getKey = (path) => {\n  const splitPath = path.split('.')\n  return splitPath[splitPath.length - 1]\n}\n\nexport const get = (data, path) => {\n  if (typeof path !== 'string') return data\n\n  return path.split('.').reduce(\n    (curr, sub) => curr && curr[sub],\n    data,\n  )\n}\n\nexport default (locale, paths, root) => {\n  const subMessages = get(locale, paths)\n  if (!subMessages || typeof subMessages === 'string') {\n    return { [getKey(paths)]: paths }\n  }\n\n  return Object\n    .keys(subMessages)\n    .reduce(\n      (acc, curr) => ({ ...acc, [curr]: `${root}.${curr}` }),\n      {},\n    )\n}\n","// eslint-disable-next-line import/no-unresolved, import/extensions\nimport IntlMessageFormat from 'intl-messageformat'\nimport { get, getSubPaths } from './utils'\n\nconst formatMessage = (message = '', ...args) => (values) => {\n  if (values) {\n    try {\n      return new IntlMessageFormat(message, ...args).format(values)\n    } catch (e) {\n      return message\n    }\n  }\n  return message\n}\n\nconst browserLanguage = window.navigator.language || window.navigator.browserLanguage\n\nexport default (lang = browserLanguage, locale, formats) => (rootPath = '', values) => {\n  // in case of locale is not initialized\n  if (!locale) return {}\n\n  let paths = rootPath\n  if (typeof paths === 'string') paths = getSubPaths(locale, paths, rootPath)\n  return Object\n    .keys(paths)\n    .reduce((acc, curr) => {\n      const message = get(locale, paths[curr])\n      return {\n        ...acc,\n        [curr]: formatMessage(message, lang, formats)(values && { ...values, ...values[curr] }) }\n    }, {})\n}\n","import React, { Component } from 'react'\nimport shallowEqual from 'fbjs/lib/shallowEqual'\nimport { wrapDisplayName, getConfigs } from './utils'\nimport formatter from './formatter'\n\nexport default (path, getState) => WrappedComponent => class extends Component {\n  static displayName = wrapDisplayName(WrappedComponent, 'Intl')\n\n  static contextTypes = {\n    store: () => null, // this is to avoid importing prop-types\n  }\n\n  constructor(props, context) {\n    super(props, context)\n    this.messages = {}\n    this.state = {\n      injectedProps: {},\n    }\n  }\n\n  componentWillMount() {\n    this.unsubscribe = this.context.store.subscribe(() => { this.inject() })\n    this.inject()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.inject(nextProps)\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe()\n  }\n\n  inject = (nextProps) => {\n    /* take lang, locale and formats on `store` reducer */\n    const { lang, locale, formats } = getConfigs(getState)(this.context)\n\n    /* path can be a function, in which case we pass props to it */\n    let innerPath = path\n    if (typeof path === 'function') innerPath = path(nextProps || this.props)\n\n    /* format messages */\n    const messages = formatter(lang, locale, formats)(\n      innerPath,\n      nextProps || this.props,\n    )\n    /* not change messages when the formated messages is identical */\n    if (shallowEqual(this.state.injectedProps.messages, messages)) return\n    this.setState(state => ({\n      ...state,\n      injectedProps: { messages },\n    }))\n  }\n\n  render() {\n    return (\n      <WrappedComponent\n        /* this is parent props */\n        {...this.props}\n        /* this is injected props from hoc */\n        {...this.state.injectedProps}\n      />\n    )\n  }\n}\n","export default (Component, wrapperName) => (\n  `${wrapperName || 'intl'} (${Component.displayName\n  || Component.name\n  || (Component.constructor && Component.constructor.name)\n  || 'Unknown'})`\n)\n"],"names":["defaultState","state","config","getState","context","getConfig","field","mandatory","store","Error","factoryConfig","locale","lang","formats","get","data","path","split","reduce","curr","sub","browserLanguage","window","navigator","language","rootPath","values","paths","root","splitPath","subMessages","Object","keys","acc","length","message","args","_construct","IntlMessageFormat","format","e","formatMessage","WrappedComponent","Component","props","nextProps","getConfigs","_this","innerPath","messages","formatter","shallowEqual","injectedProps","setState","unsubscribe","this","subscribe","_this2","inject","React","displayName","name","constructor"],"mappings":"ijEAAMA,EAAe,SAAAC,UAASA,EAAMC,mBAWrBC,UAAY,SAACC,OACpBC,EAVc,eAACF,yDAAWH,SAAiB,SAAAI,UAAW,SAACE,OAAOC,6DAC9DN,EAAQE,EAASC,EAAQI,MAAML,iBAE/BF,IAAUA,EAAMK,KAAWC,QACzB,IAAIE,6BAAsBH,8EAAyEA,kCAEpGL,EAAMK,KAIKI,CAAcP,EAAdO,CAAwBN,SACnC,CACLO,OAAQN,EAAU,UAClBO,KAAMP,EAAU,QAChBQ,QAASR,EAAU,WAAW,MCVrBS,EAAM,SAACC,EAAMC,SACJ,iBAATA,EAA0BD,EAE9BC,EAAKC,MAAM,KAAKC,OACrB,SAACC,EAAMC,UAAQD,GAAQA,EAAKC,IAC5BL,ICIEM,EAAkBC,OAAOC,UAAUC,UAAYF,OAAOC,UAAUF,iCAEtDT,yDAAOS,EAAiBV,yCAAQE,gDAAY,eAACY,yDAAW,GAAIC,6CAErEf,EAAQ,MAAO,ODJEgB,EAAOC,EAbvBC,EAcAC,ECKFH,EAAQF,QACS,iBAAVE,IDPkBC,ECOqCH,EDN5DK,EAAchB,ECM+BH,EDP7BgB,ECOqCA,GAA5BA,EDL1BG,GAAsC,iBAAhBA,EAIpBC,OACJC,KAAKF,GACLZ,OACC,SAACe,EAAKd,eAAec,OAAMd,YAAUS,cAAQT,MAC7C,UAvBEU,EAgBaF,EAhBIV,MAAM,MACZY,EAAUK,OAAS,GAeRP,ICKrBI,OACJC,KAAKL,GACLT,OAAO,SAACe,EAAKd,eAGPc,OACFd,EAzBa,mBAACgB,yDAAU,sBAAOC,mCAAAA,2BAAS,SAACV,MAC5CA,aAEOW,EAAIC,GAAkBH,UAAYC,IAAMG,OAAOb,GACtD,MAAOc,UACAL,SAGJA,GAiBOM,CAHM3B,EAAIH,EAAQgB,EAAMR,IAGDP,EAAMC,EAA7B4B,CAAsCf,QAAeA,EAAWA,EAAOP,QAChF,yBCzBSH,EAAMb,UAAa,SAAAuC,WCLnBC,oCDYFC,EAAOxC,iJACXwC,EAAOxC,uEAoBN,SAACyC,SAE0BC,EAAW3C,EAAX2C,CAAqBC,EAAK3C,SAApDQ,IAAAA,KAAMD,IAAAA,OAAQE,IAAAA,QAGlBmC,EAAYhC,EACI,mBAATA,IAAqBgC,EAAYhC,EAAK6B,GAAaE,EAAKH,YAG7DK,EAAWC,EAAUtC,EAAMD,EAAQE,EAAxBqC,CACfF,EACAH,GAAaE,EAAKH,OAGhBO,EAAaJ,EAAK9C,MAAMmD,cAAcH,SAAUA,MAC/CI,SAAS,SAAApD,eACTA,GACHmD,cAAe,CAAEH,SAAAA,WApCdA,SAAW,KACXhD,MAAQ,CACXmD,cAAe,0PAXgDT,2FAgB5DW,YAAcC,KAAKnD,QAAQI,MAAMgD,UAAU,WAAQC,EAAKC,gBACxDA,2DAGmBb,QACnBa,OAAOb,uDAIPS,sDA0BHK,gBAACjB,OAEKa,KAAKX,MAELW,KAAKtD,MAAMmD,sDC5DPT,EDMuBD,YAAkB,oBCL1BC,EAAUiB,aACpCjB,EAAUkB,MACTlB,EAAUmB,aAAenB,EAAUmB,YAAYD,MAChD,oCDImB,CACpBrD,MAAO,kBAAM"}