{"version":3,"file":"index.js","sources":["src/utils/wrapDisplayName.js","src/utils/storeSelector.js","src/utils/localeDataRegistry.js","src/en.js","src/format.js","src/core.jsx"],"sourcesContent":["export default (Component, wrapperName) => (\n  `${wrapperName || 'intl'} (${Component.displayName\n  || Component.name\n  || (Component.constructor && Component.constructor.name)\n  || 'Unknown'})`\n)\n","const getConfig = (field, mandatory = true) => (context) => {\n  const config = context.store\n  && context.store.getState()\n  && context.store.getState().config\n\n  if ((!config || !config[field]) && mandatory) {\n    throw new Error(`/ HOC k-intl / ${field} is not readable. Make sure that this one is available at config.${field} on your redux store`)\n  }\n  return config[field]\n}\n\nexport const getLocale = getConfig('locale')\nexport const getLang = getConfig('lang')\nexport const getFormats = getConfig('formats', false)\n","import IntlMessageFormat from 'intl-messageformat'\n\nexport default function (data) {\n  const localeDatas = [].concat(data)\n\n  localeDatas.forEach((localeData) => {\n    // eslint-disable-next-line no-underscore-dangle\n    if (localeData && localeData.locale) IntlMessageFormat.__addLocaleData(localeData)\n  })\n}\n","\n// GENERATED FILE\nexport default {\"locale\":\"en\",\"pluralRuleFunction\":function (n,ord){var s=String(n).split(\".\"),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?\"one\":n10==2&&n100!=12?\"two\":n10==3&&n100!=13?\"few\":\"other\";return n==1&&v0?\"one\":\"other\"}};\n  ","import { get } from 'lodash'\nimport IntlMessageFormat from 'intl-messageformat'\nimport defaultLocaleData from './en'\nimport { addLocaleData } from './utils'\n\nconst defaultMessages = {}\nconst browserLanguage = window.navigator.language || window.navigator.browserLanguage\n/* add default locale on startup, import on src folder */\naddLocaleData(defaultLocaleData)\n\nexport const formatter = (...args) => new IntlMessageFormat(...args)\n\nexport default (lang = browserLanguage, locale, customFormats) => (config, componentProps) =>\n  Object\n    .keys(config)\n    .reduce((acc, curr) => {\n      const message = get(locale, config[curr])\n      if (message && componentProps && componentProps[curr]) {\n        return {\n          ...acc,\n          [curr]: formatter(message, lang, customFormats).format(componentProps[curr]),\n        }\n      }\n      return { ...acc, [curr]: message }\n    }, defaultMessages)\n","import React, { Component } from 'react'\nimport shallowEqual from 'fbjs/lib/shallowEqual'\nimport { wrapDisplayName, getLocale, getLang, getFormats } from './utils'\nimport format from './format'\n\nexport default config => WrappedComponent => class extends Component {\n  static displayName = wrapDisplayName(WrappedComponent, 'Intl')\n\n  static contextTypes = {\n    store: () => null, // this is to avoid importing prop-types\n  }\n\n  constructor(props, context) {\n    super(props, context)\n    this.messages = {}\n    this.state = {\n      injectedProps: {},\n    }\n  }\n\n  componentWillMount() {\n    this.unsubscribe = this.context.store.subscribe(() => { this.inject() })\n    this.inject()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.inject(nextProps)\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe()\n  }\n\n  inject = (nextProps) => {\n    /* take locale on `config.locale` reducer */\n    const lang = getLang(this.context)\n    const locale = getLocale(this.context)\n    const formats = getFormats(this.context)\n    const messages = format(lang, locale, formats)(\n      config,\n      nextProps || this.props,\n    )\n    /* not change messages when the formated messages is identical */\n    if (shallowEqual(this.state.injectedProps.messages, messages)) return\n    this.setState(state => ({\n      ...state,\n      injectedProps: { messages },\n    }))\n  }\n\n  render() {\n    return (\n      <WrappedComponent\n        /* this is parent props */\n        {...this.props}\n        /* this is injected props from hoc */\n        {...this.state.injectedProps}\n      />\n    )\n  }\n}\n"],"names":["getConfig","field","mandatory","context","config","store","getState","Error","getLocale","getLang","getFormats","data","concat","forEach","localeData","locale","IntlMessageFormat","__addLocaleData","pluralRuleFunction","n","ord","s","String","split","v0","t0","Number","n10","slice","n100","browserLanguage","window","navigator","language","addLocaleData","defaultLocaleData","lang","customFormats","componentProps","Object","keys","reduce","acc","curr","message","get","args","formatter","format","defaultMessages","Component","props","inject","nextProps","_this","formats","messages","shallowEqual","state","injectedProps","setState","unsubscribe","this","subscribe","React","WrappedComponent","displayName","name","constructor","contextTypes"],"mappings":"6gBAAA,ICAMA,EAAY,SAACC,OAAOC,oEAAqB,SAACC,OACxCC,EAASD,EAAQE,OACpBF,EAAQE,MAAMC,YACdH,EAAQE,MAAMC,WAAWF,YAEtBA,IAAWA,EAAOH,KAAWC,QAC3B,IAAIK,wBAAwBN,sEAAyEA,iCAEtGG,EAAOH,KAGHO,EAAYR,EAAU,UACtBS,EAAUT,EAAU,QACpBU,EAAaV,EAAU,WAAW,GCXhC,WAAUW,MACAC,OAAOD,GAElBE,QAAQ,SAACC,GAEfA,GAAcA,EAAWC,QAAQC,EAAkBC,gBAAgBH,KCL3E,OAAgBC,OAAS,KAAKG,mBAAqB,SAAUC,EAAEC,OAASC,EAAEC,OAAOH,GAAGI,MAAM,KAAKC,GAAIH,EAAE,GAAGI,EAAGC,OAAOL,EAAE,KAAKF,EAAEQ,EAAIF,GAAIJ,EAAE,GAAGO,OAAO,GAAGC,EAAKJ,GAAIJ,EAAE,GAAGO,OAAO,GAAG,OAAGR,EAAgB,GAALO,GAAc,IAANE,EAAS,MAAW,GAALF,GAAc,IAANE,EAAS,MAAW,GAALF,GAAc,IAANE,EAAS,MAAM,QAAkB,GAAHV,GAAMK,EAAG,MAAM,oyBCIrRM,EAAkBC,OAAOC,UAAUC,UAAYF,OAAOC,UAAUF,gBAEtEI,EAAcC,GAEd,qBAEgBC,yDAAON,EAAiBf,eAAQsB,sBAAkB,SAACjC,EAAQkC,UACzEC,OACGC,KAAKpC,GACLqC,OAAO,SAACC,EAAKC,OACNC,EAAUC,MAAI9B,EAAQX,EAAOuC,WAC/BC,GAAWN,GAAkBA,EAAeK,QAEzCD,OACFC,EAVc,sCAAIG,kFAAa9B,gBAAqB8B,KAU7CC,CAAUH,EAASR,EAAMC,GAAeW,OAAOV,EAAeK,WAG9DD,OAAMC,EAAOC,KACxBK,kCCnBkB,oBLLTC,oCKYFC,EAAOhD,4EACXgD,EAAOhD,aAoBfiD,OAAS,SAACC,OAEFjB,EAAO3B,EAAQ6C,EAAKnD,SACpBY,EAASP,EAAU8C,EAAKnD,SACxBoD,EAAU7C,EAAW4C,EAAKnD,SAC1BqD,EAAWR,EAAOZ,EAAMrB,EAAQwC,EAArBP,CACf5C,EACAiD,GAAaC,EAAKH,OAGhBM,EAAaH,EAAKI,MAAMC,cAAcH,SAAUA,MAC/CI,SAAS,wBACTF,kBACcF,mBAhCdA,cACAE,8VAVkDR,6EAgBlDW,YAAcC,KAAK3D,QAAQE,MAAM0D,UAAU,aAAaX,gBACxDA,2DAGmBC,QACnBD,OAAOC,uDAIPQ,sDAsBHG,gBAACC,OAEKH,KAAKX,MAELW,KAAKJ,MAAMC,2BAlDdO,uBLNOhB,EKMuBe,GLLEC,aACpChB,EAAUiB,MACTjB,EAAUkB,aAAelB,EAAUkB,YAAYD,MAChD,iBKIIE,oBACE,kBAAM"}